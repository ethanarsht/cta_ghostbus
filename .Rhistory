df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
)
df_reg %>% gt::gt()
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
as_numeric, round, 2
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
as.numeric, round, 2
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
where(as.numeric), round, 2
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
as_numeric(), round, 2
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
as.numeric(), round, 2
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
as.numeric(), function(x) {x = round(x, 2)}
)
)
glimpse(df_reg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 2)}
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 3)}
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 4)}
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 5)}
)
)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
View(df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
#combined
df_bigreg <- df_combined %>% select(community, asian = Asian, black = `Black or African-American`,
spanish = `Persons of Spanish Language*`,
white = White, other = Other, reliability,
income = `Median household income`,
BA = `Percent with a BA or Higher`,
`poverty` = `Percent income below poverty level`,
crime_percap
) %>%
mutate(
across(
is.numeric, ~scale(.) %>% as.vector
)
)
cor(df_bigreg %>% as_tibble() %>% select(-community, -geometry) %>% drop_na(white))
lr_combined <- lm(reliability~asian+black+spanish+white+
income+crime_percap, data = df_bigreg)
summary(lr_combined)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
library(tidyverse)
library(sf)
library(tidymodels)
library(spatmap)
library(httr)
library(jsonlite)
library(leaflet)
library(spdep)
library(readxl)
pif <- function(x, p, true, false = identity){
if(!requireNamespace("purrr"))
stop("Package 'purrr' needs to be installed to use function 'pif'")
if(inherits(p,     "formula"))
p     <- purrr::as_mapper(
if(!is.list(x)) p else update(p,~with(...,.)))
if(inherits(true,  "formula"))
true  <- purrr::as_mapper(
if(!is.list(x)) true else update(true,~with(...,.)))
if(inherits(false, "formula"))
false <- purrr::as_mapper(
if(!is.list(x)) false else update(false,~with(...,.)))
if ( (is.function(p) && p(x)) || (!is.function(p) && p)){
if(is.function(true)) true(x) else true
}  else {
if(is.function(false)) false(x) else false
}
}
### data preparation
df_demo <- tibble()
for (s in excel_sheets("demographics/combined_demos.xlsx")[1:7]) {
print(s)
temp <- read_excel('demographics/combined_demos.xlsx', skip = 1, sheet = s) %>%
select(`...1`, `2016-2020`) %>%
slice(1:which(`...1` == 'Chicago')) %>%
mutate(
neigh = if_else(str_detect(`...1`, "[0-9]\\."), `...1`, NA)
) %>%
fill(neigh) %>%
drop_na(`2016-2020`) %>%
pivot_wider(
id_cols = neigh,
names_from = `...1`,
values_from = `2016-2020`
) %>%
mutate(
neigh = str_remove(neigh, "[0-9]*\\.") %>% str_trim() %>% str_to_upper(),
across(2:ncol(.), function(x) {x = as.numeric(x)})
)
if (s != 'Income' & s != "Poverty" & s != 'Education') {
temp <- temp %>%
mutate(
across(3:ncol(.), function(x) {x = x/Total})
)
}
temp <- temp %>%
select(-Total)
if (ncol(df_demo > 1)) {
if (s != "Income") {
df_demo <- df_demo %>% left_join(temp)
} else {
df_demo <- df_demo %>% left_join(temp)
}
} else {
df_demo <- temp
}
}
df_demo <- df_demo %>%
mutate(
`citizen` = coalesce(`U.S. citizen by birth`, `U.S. citizen`)
)
df_population <- read_csv('demographics/neighborhood_populations.csv')
df_crime <- read_csv('demographics/crimes_neighborhood_year.csv') %>%
mutate(
`Community Areas` = as.character(`Community Areas`)
)
geo_neigh <- st_read('demographics/geo_export_458a04a1-5369-4342-9247-aad47c881467.shp')
df_crime_nabe <- geo_neigh %>%
left_join(df_crime, by = c('area_numbe' = 'Community Areas')) %>%
st_transform(4326)
df_bus_neigh <- st_read('combined_bus_data.geojson')
df_combined <- df_crime_nabe %>%
st_join(
df_bus_neigh,
left = T
) %>%
left_join(
df_population %>% select(area_id, population),
by = c('area_numbe' = 'area_id')
) %>%
mutate(
crime_percap = ID/population
) %>%
group_by(
area_numbe
) %>%
summarize(
reliability = mean(reliability),
community = first(community),
crime = first(ID),
population = first(population),
crime_percap = first(crime_percap)
) %>%
ungroup() %>%
left_join(
df_demo, by = c('community' = 'neigh')
) %>%
filter(
community != 'FULLER PARK'
)
df_race_reg <- df_combined %>% select(asian = Asian, black = `Black or African-American`,
spanish = `Persons of Spanish Language*`,
white = White, other = Other, reliability)
#race
lr_race <- lm(reliability ~ asian+black+spanish+white+other, data = df_race_reg)
#crime
lr_bus_crime <- lm(reliability~crime, data = df_combined)
#income
lr_income <- lm(reliability~`Median household income`, data = df_combined)
#poverty line
lr_poverty <- lm(reliability~`Percent income below poverty level`, data = df_combined)
#education
df_education <- df_combined %>% select(BA = `Percent with a BA or Higher`,
HS = `Percent HS Grad or Higher`,
reliability) %>%
drop_na(BA)
#combined
df_bigreg <- df_combined %>% select(community, asian = Asian, black = `Black or African-American`,
spanish = `Persons of Spanish Language*`,
white = White, other = Other, reliability,
income = `Median household income`,
BA = `Percent with a BA or Higher`,
`poverty` = `Percent income below poverty level`,
crime_percap
) %>%
mutate(
across(
is.numeric, ~scale(.) %>% as.vector
)
)
cor(df_bigreg %>% as_tibble() %>% select(-community, -geometry) %>% drop_na(white))
lr_combined <- lm(reliability~asian+black+spanish+white+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
plot_summs(lr_combined)
ggplot(df_reg, aes(x = income, y = relibiability)) +
geom_point()
df_reg
ggplot(df_bigreg, aes(x = income, y = relibiability)) +
geom_point()
ggplot(df_bigreg, aes(x = income, y = reliability)) +
geom_point()
ggplot(df_bigreg, aes(x = black, y = reliability)) +
geom_point()
#race
lr_race <- lm(reliability ~ black, data = df_race_reg)
summary(lr_race)
#combined
df_bigreg <- df_combined %>% select(community, asian = Asian, black = `Black or African-American`,
spanish = `Persons of Spanish Language*`,
white = White, other = Other, reliability,
income = `Median household income`,
BA = `Percent with a BA or Higher`,
`poverty` = `Percent income below poverty level`,
crime_percap
) %>%
mutate(
across(
is.numeric, ~scale(.) %>% as.vector
)
)
cor(df_bigreg %>% as_tibble() %>% select(-community, -geometry) %>% drop_na(white))
lr_combined <- lm(reliability~asian+black+spanish+white+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
lr_combined <- lm(reliability~black+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
lr_combined <- lm(reliability~asian+black+spanish+white+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
#race
lr_race <- lm(reliability ~ black+white, data = df_race_reg)
lr_race
summary(lr_race)
cor(df_race_reg)
df_race_reg
cor(df_race_reg %>% as_tibble() %>% select(-geometry))
cor(df_race_reg %>% as_tibble() %>% select(-geometry) %>% drop_na(black))
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
labs(
title = "Bivariate regression of bus reliability vs. neighborhood black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability vs. neighborhood black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \n vs. neighborhood black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \nvs. neighborhood black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \nvs. neighborhood black population share",
y = 'Reliability score',
x = "Black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
theme(axis.title = element_text(size = 12)) +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \nvs. neighborhood black population share",
y = 'Reliability score',
x = "Black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
theme(axis.title = element_text(size = 14)) +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \nvs. neighborhood black population share",
y = 'Reliability score',
x = "Black population share"
)
ggplot(df_race_reg, aes(x = black, y = reliability)) +
geom_point() +
geom_smooth(method = 'lm') +
bbplot::bbc_style() +
theme(axis.title = element_text(size = 14)) +
labs(
title = "",
subtitle = "Bivariate regression of bus reliability \nvs. neighborhood black population share",
y = 'Reliability score',
x = "Black population share"
) +
scale_x_continuous(labels = percent_format())
#combined
df_bigreg <- df_combined %>% select(community, asian = Asian, black = `Black or African-American`,
spanish = `Persons of Spanish Language*`,
white = White, other = Other, reliability,
income = `Median household income`,
BA = `Percent with a BA or Higher`,
`poverty` = `Percent income below poverty level`,
crime_percap
) %>%
mutate(
across(
is.numeric, ~scale(.) %>% as.vector
)
)
cor(df_bigreg %>% as_tibble() %>% select(-community, -geometry) %>% drop_na(white))
lr_combined <- lm(reliability~asian+black+spanish+white+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
summary(df_reg)
summary(lr_combined)
lr_combined <- lm(reliability~asian+black+spanish+
income+crime_percap, data = df_bigreg)
df_reg <- summary(lr_combined)$coefficients %>% as_tibble(rownames = NA) %>%
mutate(
Variable = rownames(.)
) %>%
relocate(Variable) %>%
mutate(
across(
c(2:5), function(x) {x = round(x, 6)}
)
)
df_reg %>% gt::gt()
summary(lr_combined)
